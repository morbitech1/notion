name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:
  lint-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.12' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v4
        with:
          poetry-version: '2.1.2'

      - name: Configure Poetry (in-project venv)
        env:
          POETRY_VIRTUALENVS_IN_PROJECT: true
        run: |
          poetry config virtualenvs.in-project true

      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root

      - name: Validate project metadata
        run: |
          poetry check

      - name: Flake8
        run: |
          poetry run flake8

      - name: Mypy
        run: |
          poetry run mypy

      - name: Pytest
        env:
          PYTHONPATH: .
        run: |
          poetry run pytest -q
